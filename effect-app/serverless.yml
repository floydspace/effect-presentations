service: demo-effect-app
frameworkVersion: "3"

plugins:
  - serverless-esbuild
  # - ./provided-runtime-plugin.js

provider:
  name: aws
  runtime: nodejs22.x
  region: eu-west-1
  tracing:
    apiGateway: true
    lambda: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action: sns:Publish
          Resource: !Ref DomainTopic

custom:
  esbuild:
    minify: true
    metafile: true
    exclude: ["@aws-sdk/*"]
    # exclude: ["effect", "@effect/platform"]
    mainFields: ["module", "main"]
    alias:
      mongodb: mongodb/src
    packager: pnpm

functions:
  api:
    handler: src/apiLambda.handler
    layers:
      - arn:aws:lambda:eu-west-1:580247275435:layer:LambdaInsightsExtension:53
    environment:
      MONGODB_URL: mongodb+srv://cluster0.tlkgc.mongodb.net/demo?retryWrites=true&w=majority&authSource=%24external&authMechanism=MONGODB-AWS
    events:
      - http:
          path: /{proxy+}
          method: ANY
  lambda:
    handler: src/index.handler
    layers:
      - arn:aws:lambda:eu-west-1:580247275435:layer:LambdaInsightsExtension:53 # Needed for graceful shutdown
      # - arn:aws:lambda:eu-west-1:780689416838:layer:aws-lambda-effect-runtime:38
    environment:
      MONGODB_URL: mongodb+srv://cluster0.tlkgc.mongodb.net/demo?retryWrites=true&w=majority&authSource=%24external&authMechanism=MONGODB-AWS
      DOMAIN_TOPIC_ARN: !Ref DomainTopic

resources:
  Resources:
    DomainTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-domain-topic
